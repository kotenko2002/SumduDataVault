import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "~/components/ui/card";
import { Button } from "~/components/ui/button";
import { Label } from "~/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "~/components/ui/select";
import { Input } from "~/components/ui/input";
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "~/components/ui/collapsible";
import { Filter, ChevronDown, ChevronUp } from "lucide-react";
import { UserAutocomplete } from '~/components/autocompletes/UserAutocomplete';
import { RequestsTable } from '~/components/tables/RequestsTable';
import { useRequestsAdminSearch, type RequestsAdminSearchFilters } from '~/hooks/useRequestsAdminSearch';

export default function SearchAdmin() {
  // –°—Ç–∞–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è–º —Å–µ–∫—Ü—ñ–π
  const [isBasicFiltersOpen, setIsBasicFiltersOpen] = useState(true);
  const [isUserFiltersOpen, setIsUserFiltersOpen] = useState(false);
  const [isDateFiltersOpen, setIsDateFiltersOpen] = useState(false);
  
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ö—É–∫ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∑–∞–ø–∏—Ç–∞–º–∏
  const {
    requests,
    totalCount,
    totalPages,
    currentPage,
    take,
    isLoading,
    isError,
    applyFilters,
    clearFilters,
    setPageNumber,
    setPageSize,
  } = useRequestsAdminSearch({ defaultPageSize: 10 });
  
  // –°—Ç–∞–Ω –¥–ª—è —Ñ–æ—Ä–º–∏ (–ª–æ–∫–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–∏, —è–∫—ñ —â–µ –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ)
  const [formData, setFormData] = useState<RequestsAdminSearchFilters>({
    requestType: undefined,
    status: undefined,
    userFullName: "",
    createdFrom: "",
    createdTo: ""
  });

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSelectChange = (field: 'requestType' | 'status', value: string) => {
    const numValue = value === "all" ? undefined : Number(value);
    setFormData(prev => ({
      ...prev,
      [field]: numValue
    }));
  };

  // –§—É–Ω–∫—Ü—ñ—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
  const handleApplyFilters = () => {
    const newFilters: RequestsAdminSearchFilters = {};
    
    if (formData.requestType !== undefined) {
      newFilters.requestType = formData.requestType;
    }
    
    if (formData.status !== undefined) {
      newFilters.status = formData.status;
    }
    
    if (formData.userFullName?.trim()) {
      newFilters.userFullName = formData.userFullName.trim();
    }
    
    if (formData.createdFrom) {
      newFilters.createdFrom = new Date(formData.createdFrom).toISOString();
    }
    
    if (formData.createdTo) {
      newFilters.createdTo = new Date(formData.createdTo).toISOString();
    }
    
    applyFilters(newFilters);
  };

  const handleClearFilters = () => {
    setFormData({
      requestType: undefined,
      status: undefined,
      userFullName: "",
      createdFrom: "",
      createdTo: ""
    });
    clearFilters();
  };

  // –û–±—Ä–æ–±–∫–∞ —Å—Ç–∞–Ω—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–æ–∫
  if (isError) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="mb-6">
          <h1 className="text-3xl font-bold tracking-tight">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–º–∏</h1>
        </div>
        <Card>
          <CardContent className="p-6">
            <p className="text-red-600">–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-6">
        <h1 className="text-3xl font-bold tracking-tight">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–º–∏</h1>
      </div>

      {/* –ê–¥–∞–ø—Ç–∏–≤–Ω–∏–π –º–∞–∫–µ—Ç: –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∏–π –¥–ª—è –º–∞–ª–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤, –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∏–π –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö */}
      <div className="flex flex-col lg:flex-row lg:gap-6">
        {/* –ë—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ - –∑–ª—ñ–≤–∞ –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –µ–∫—Ä–∞–Ω–∞—Ö */}
        <div className="lg:w-80 lg:flex-shrink-0 mb-6 lg:mb-0">
          <Card className="sticky top-4">
            <CardHeader>
              <CardTitle className="flex items-center gap-2 text-lg">
                <Filter className="h-4 w-4" />
                –§—ñ–ª—å—Ç—Ä–∏
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {/* –ë–∞–∑–æ–≤—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ */}
              <Collapsible open={isBasicFiltersOpen} onOpenChange={setIsBasicFiltersOpen}>
                <CollapsibleTrigger asChild>
                  <Button variant="ghost" size="sm" className="w-full justify-between h-8 text-sm">
                    üîç –ë–∞–∑–æ–≤—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
                    {isBasicFiltersOpen ? <ChevronUp className="h-3 w-3" /> : <ChevronDown className="h-3 w-3" />}
                  </Button>
                </CollapsibleTrigger>
                <CollapsibleContent className="space-y-3 mt-3">
                  <div className="space-y-3">
                    {/* –§—ñ–ª—å—Ç—Ä –∑–∞ —Ç–∏–ø–æ–º –∑–∞–ø–∏—Ç—É */}
                    <div className="space-y-2">
                      <Label htmlFor="request-type-filter" className="text-sm">–¢–∏–ø –∑–∞–ø–∏—Ç—É</Label>
                      <Select 
                        value={formData.requestType?.toString() || "all"} 
                        onValueChange={(value) => handleSelectChange('requestType', value)}
                      >
                        <SelectTrigger className="h-9 w-full">
                          <SelectValue placeholder="–í—Å—ñ —Ç–∏–ø–∏" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="all">–í—Å—ñ —Ç–∏–ø–∏</SelectItem>
                          <SelectItem value="0">–ü–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –¥–∞–Ω–∏—Ö</SelectItem>
                          <SelectItem value="1">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç—É</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>

                    {/* –§—ñ–ª—å—Ç—Ä –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º */}
                    <div className="space-y-2">
                      <Label htmlFor="status-filter" className="text-sm">–°—Ç–∞—Ç—É—Å</Label>
                      <Select 
                        value={formData.status?.toString() || "all"} 
                        onValueChange={(value) => handleSelectChange('status', value)}
                      >
                        <SelectTrigger className="h-9 w-full">
                          <SelectValue placeholder="–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="all">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</SelectItem>
                          <SelectItem value="0">–û—á—ñ–∫—É—î —Ä–æ–∑–≥–ª—è–¥—É</SelectItem>
                          <SelectItem value="1">–°—Ö–≤–∞–ª–µ–Ω–æ</SelectItem>
                          <SelectItem value="2">–í—ñ–¥—Ö–∏–ª–µ–Ω–æ</SelectItem>
                          <SelectItem value="3">–°–∫–∞—Å–æ–≤–∞–Ω–æ</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>
                </CollapsibleContent>
              </Collapsible>

              {/* –§—ñ–ª—å—Ç—Ä–∏ –¥–∞—Ç */}
              <Collapsible open={isDateFiltersOpen} onOpenChange={setIsDateFiltersOpen}>
                <CollapsibleTrigger asChild>
                  <Button variant="ghost" size="sm" className="w-full justify-between h-8 text-sm">
                    üìÖ –§—ñ–ª—å—Ç—Ä–∏ –¥–∞—Ç
                    {isDateFiltersOpen ? <ChevronUp className="h-3 w-3" /> : <ChevronDown className="h-3 w-3" />}
                  </Button>
                </CollapsibleTrigger>
                <CollapsibleContent className="space-y-3 mt-3">
                  <div className="space-y-3">
                    {/* –§—ñ–ª—å—Ç—Ä –∑–∞ –¥–∞—Ç–æ—é –≤—ñ–¥ */}
                    <div className="space-y-2">
                      <Label htmlFor="created-from-filter" className="text-sm">–î–∞—Ç–∞ –≤—ñ–¥</Label>
                      <Input
                        id="created-from-filter"
                        type="date"
                        value={formData.createdFrom || ""}
                        onChange={(e) => handleInputChange('createdFrom', e.target.value)}
                        className="h-9 w-full"
                      />
                    </div>

                    {/* –§—ñ–ª—å—Ç—Ä –∑–∞ –¥–∞—Ç–æ—é –¥–æ */}
                    <div className="space-y-2">
                      <Label htmlFor="created-to-filter" className="text-sm">–î–∞—Ç–∞ –¥–æ</Label>
                      <Input
                        id="created-to-filter"
                        type="date"
                        value={formData.createdTo || ""}
                        onChange={(e) => handleInputChange('createdTo', e.target.value)}
                        className="h-9 w-full"
                      />
                    </div>
                  </div>
                </CollapsibleContent>
              </Collapsible>

              {/* –§—ñ–ª—å—Ç—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ */}
              <Collapsible open={isUserFiltersOpen} onOpenChange={setIsUserFiltersOpen}>
                <CollapsibleTrigger asChild>
                  <Button variant="ghost" size="sm" className="w-full justify-between h-8 text-sm">
                    üë§ –§—ñ–ª—å—Ç—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
                    {isUserFiltersOpen ? <ChevronUp className="h-3 w-3" /> : <ChevronDown className="h-3 w-3" />}
                  </Button>
                </CollapsibleTrigger>
                <CollapsibleContent className="space-y-3 mt-3">
                  <div className="space-y-3">
                    {/* –§—ñ–ª—å—Ç—Ä –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º */}
                    <div className="space-y-2">
                      <Label htmlFor="user-name-filter" className="text-sm">–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</Label>
                      <UserAutocomplete
                        value={formData.userFullName || ""}
                        onChange={(value) => handleInputChange('userFullName', value)}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –ü–Ü–ë –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
                        className="w-full"
                      />
                    </div>
                  </div>
                </CollapsibleContent>
              </Collapsible>

              {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏ */}
              <div className="flex gap-2 pt-2">
                <Button onClick={handleApplyFilters} className="flex-1 h-9" disabled={isLoading}>
                  {isLoading ? "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è..." : "–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏"}
                </Button>
                <Button variant="outline" onClick={handleClearFilters} className="h-9">
                  –û—á–∏—Å—Ç–∏—Ç–∏
                </Button>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞ –æ–±–ª–∞—Å—Ç—å –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ - —Å–ø—Ä–∞–≤–∞ –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –µ–∫—Ä–∞–Ω–∞—Ö */}
        <div className="flex-1 min-w-0">
          {/* –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ */}
          {isError && (
            <Card>
              <CardContent className="p-6">
                <p className="text-red-600">–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–∞–ø–∏—Ç—ñ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.</p>
              </CardContent>
            </Card>
          )}

          {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ */}
          {!isLoading && !isError && requests?.length === 0 && (
            <Card>
              <CardContent className="p-6 text-center">
                <div className="flex flex-col items-center gap-4">
                  <Filter className="h-12 w-12 text-muted-foreground" />
                  <div>
                    <h3 className="text-lg font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p className="text-muted-foreground">–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó –ø–æ—à—É–∫—É</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É */}
          {requests && requests.length > 0 && (
            <Card>
              <CardHeader>
                <CardTitle className="text-lg">–°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Ç—ñ–≤</CardTitle>
              </CardHeader>
              <CardContent>
                <RequestsTable
                  requests={requests}
                  isLoading={isLoading}
                  showUserColumn={true}
                  pageNumber={currentPage}
                  pageSize={take}
                  totalPages={totalPages}
                  totalRows={totalCount}
                  pageSizeOptions={[5, 10, 20, 50, 100]}
                  changePageNumber={setPageNumber}
                  changePageSize={setPageSize}
                />
              </CardContent>
            </Card>
          )}
        </div>
      </div>

    </div>
  );
}
